1->

class Solution {
public:
    int numOfSubarrays(vector<int>& arr, int k, int threshold) {
        int n = arr.size();
        int sum = 0;
        for(int i = 0; i < k; i++){
            sum += arr[i];
        }
        int i = 0;
        int j = k;
        int count = 0;
        if((sum/k) >= threshold) count++;
        while(j <n){
            int curr = sum + arr[j] - arr[i];
            if((curr/k) >= threshold) count++;
            i++;
            j++;
            sum = curr;
        }
        return count;
    }
};

2->

class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        if(k<=1) return 0;
        int n = nums.size();
        int i = 0;
        int j = k;
        int sum = 0;
        int count = 0;
        int x = 0;
        while(j<=n){
            i = x;
            while(i < j){
                if(nums[i]%2 != 0) sum++;
                i++;
            }
            if(sum == k){
                count++;
                x++;
            }
            j++;
            sum = 0;
        }
        return count;
        
    }
};